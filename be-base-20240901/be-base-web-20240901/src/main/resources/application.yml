be:
  common:
    host: localhost
    username: root
    password: password
  mysql:
    connect-param: characterEncoding=utf-8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true
  socket:
    web-socket:
      scheme: ws://
      host: localhost
      path: /ws

#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #按环境进行修改：直接注释掉，备注：需要全部注释掉

springdoc:
  swagger-ui:
    enabled: true #按环境进行修改：false
  api-docs:
    enabled: true #按环境进行修改：false

server:
  port: 8001

management:
  server:
    port: -1 #关闭监控
  endpoints:
    enabled-by-default: false #关闭监控

spring:

  application:
    name: be-base-web-20240901

  profiles:
    active: dev #按环境进行修改：prod

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null

  servlet:
    multipart: #配置文件上传大小限制
      max-file-size: 100MB
      max-request-size: 100MB

  redis:
    host: ${be.common.host}
    password: ${be.common.password}
    port: 6001

  kafka:
    bootstrap-servers: ${be.common.host}:9091
    consumer:
      enable-auto-commit: false #为了：ack-mode: manual_immediate，设置为 true，则 ack-mode不会生效
      auto-offset-reset: latest #当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      fetch-max-wait: 500 #消费者拉取消息的延迟（ms），默认 500
    listener:
      ack-mode: manual_immediate #手动调用 Acknowledgment.acknowledge() 后立即提交

  datasource:
    dynamic:
      primary: master # 默认数据源名称，备注：如果不指定值，则值为：master，并且这里会在代码里面注入 master的数据源：shardingJdbc
      # datasource:
      # be-base-doris-20240901: # 备注：不要使用下划线，因为下划线会进行分组
      # driver-class-name: com.mysql.cj.jdbc.Driver
      # url: jdbc:mysql://${be.common.doris-host}:9031/be_base_doris_20240901?${be.mysql.connect-param}
      # username: ${be.common.username}
      # password: ${be.common.doris-password}

  shardingsphere:
    #props:
    #  sql-show: true #按环境进行修改：直接注释掉
    mode:
      type: Standalone
      repository:
        type: JDBC
    datasource:
      names: be-base-20240901
      be-base-20240901:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://${be.common.host}:3001/be_base_20240901?${be.mysql.connect-param}
        username: ${be.common.username}
        password: ${be.common.password}
    rules:
      sharding:
        binding-tables:
          - base_user,base_user_info
        sharding-algorithms:
          base-user-inline:
            props:
              algorithm-expression: base_user_$->{id % 2}
            type: INLINE
          base-user-info-inline:
            props:
              algorithm-expression: base_user_info_$->{id % 2}
            type: INLINE
        tables:
          base_user:
            actual-data-nodes: be-base-20240901.base_user_$->{0..1}
            table-strategy:
              standard:
                sharding-algorithm-name: base-user-inline
                sharding-column: id
          base_user_info:
            actual-data-nodes: be-base-20240901.base_user_info_$->{0..1}
            table-strategy:
              standard:
                sharding-algorithm-name: base-user-info-inline
                sharding-column: id
